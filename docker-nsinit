#!/bin/sh

print_usage() {
  echo "Usage: $(basename $0) <container id/name> [{command:-$SHELL} [argments...]]"
}

ID="$1"
if [ -z "$ID" ] ; then
  print_usage >&2
  exit 1
fi
shift

CID=$(docker inspect --format '{{.Id}}' "$ID" 2> /dev/null)
if [ -z "$CID" ] ; then
  echo "$ID: no such container is running" >&2
  exit 1
fi

IS_RUNNING=$(docker inspect --format '{{.State.Running}}' "$ID" 2> /dev/null)
if [ "$IS_RUNNING" != "true" ] ; then
  echo "$ID: no such container is running" >&2
  exit 1
fi

ROOT_DIR=$(docker info 2> /dev/null | sed -n "s/[ ]*Root Dir:[ ]*//gp")
if [ -z "$ROOT_DIR" ] ; then
  DATA_PATH=$(sudo find / -name container.json | grep "$CID")
  if [ -z "$DATA_PATH" ] ; then
    echo "$ID: no such container is running under the native driver" >&2
    echo "You may be able to use nsenter instead of nsinit." >&2
    exit 1
  fi
  DATA_PATH=${DATA_PATH%/*}
else
  DATA_PATH="${ROOT_DIR%/*}/execdriver/native/$CID"
  if ! sudo ls "$DATA_PATH" 2> /dev/null ; then
    echo "$ID: no such container is running under the native driver" >&2
    echo "You may be able to use nsenter instead of nsinit." >&2
    exit 1
  fi
fi

CMD="${1:-$SHELL}"; [ ! -z "$1" ] && shift

echo data_path="$DATA_PATH" nsinit exec -- "$CMD" "$@"
sudo data_path="$DATA_PATH" nsinit exec -- "$CMD" "$@"
